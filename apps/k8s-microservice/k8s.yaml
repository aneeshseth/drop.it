apiVersion: apps/v1
kind: Deployment
metadata:
  name: service_name
  labels:
    app: service_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service_name
  template:
    metadata:
      labels:
        app: service_name
    spec:
      volumes:
        - name: workspace-volume
          emptyDir: {}
      initContainers:
        - name: copy-s3-resources
          image: amazon/aws-cli
          command: ["/bin/sh", "-c"]
          args:
            - >
              aws s3 cp s3://sandbox-b/service_name/ /workspace/ --recursive &&
              echo "Resources copied from S3";
          env:
            - name: AWS_ACCESS_KEY_ID
              value: ""
            - name: AWS_SECRET_ACCESS_KEY
              value: ""
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
      containers:
        - name: runner
          image: aneeshseth/server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
          resources:
            requests:
              cpu: "0.2"
              memory: "100Mi"
            limits:
              cpu: "0.2"
              memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: service_name
spec:
  selector:
    app: service_name
  ports:
    - protocol: TCP
      name: ws
      port: 3001
      targetPort: 3001
    - protocol: TCP
      name: user
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service_name
spec:
  ingressClassName: nginx
  rules:
    - host: service_name.wsserver.aneesh.wiki
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service_name
                port:
                  number: 3001
    - host: service_name.runapp.aneesh.pro
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service_name
                port:
                  number: 3000
